head(a)
b <- read.csv("tidy_dataset.csv")
head(b)
a <- read.table("tidy_dataset.txt", head=T,sep=",")
head(a)
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
a <- read.table("tidy_dataset.txt", head=T)
head(a)
set.seed(1234)
smalldat <- data.frame(group1 = rep(1:2, each = 5),
group2 = rep(c('a','b'), times = 5),
x = rnorm(10))
smalldat
library(data.table)
smalldat <- data.table(smalldat)
install.package("data.table")
install.packages("data.table")
library(data.table)
smalldat <- data.table(smalldat)
smalldat
class(smalldat)
smalldat[, aggGroup1 := mean(x), by = group1]
smalldat
smalldat[, aggGroup1.2 := mean(x), by = list(group1, group2)]
smalldat
library(plyr)
aggdat1 <- ddply(smalldat, .(group1), summarize,
aggGroup1plyr = mean(x))
aggdat1
aggdat1 <- ddply(smalldat, .(group2), summarize,
aggGroup1plyr = mean(x))
aggdat1 <- ddply(smalldat, .(group1), summarize,
aggGroup1plyr = mean(x))
aggdat2 <- ddply(smalldat, .(group2), summarize,
aggGroup1plyr = mean(x))
aggdat2
smalldat <- join(smalldat, aggdat1, by = 'group1')
smalldat <- join(smalldat, aggdat2, by = c('group1', 'group2'))
smalldat
smalldat <- join(smalldat, aggdat12, by = c('group1', 'group2'))
smalldat <- join(smalldat, aggdat2, by = c('group1', 'group2'))
setkeyv(smalldat, c('group1','group2'))
smalldat
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/package_datatable")
# generate a small dataset
set.seed(1234)
smalldat <- data.frame(group1 = rep(1:2, each = 5),
group2 = rep(c('a','b'), times = 5),
x = rnorm(10))
# convert to data.frame to data.table
library(data.table)
smalldat <- data.table(smalldat)
# convert aggregated variable into raw data file
smalldat[, aggGroup1 := mean(x), by = group1]
Output
smalldat[, aggGroup1.2 := mean(x), by = list(group1, group2)]
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/package_datatable")
# generate a small dataset
set.seed(1234)
smalldat <- data.frame(group1 = rep(1:2, each = 5),
group2 = rep(c('a','b'), times = 5),
x = rnorm(10))
# convert to data.frame to data.table
library(data.table)
smalldat <- data.table(smalldat)
# convert aggregated variable into raw data file
smalldat[, aggGroup1 := mean(x), by = group1]
smalldat[, aggGroup1.2 := mean(x), by = list(group1, group2)]
smalldat
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/package_datatable")
# generate a small dataset
set.seed(1234)
smalldat <- data.frame(group1 = rep(1:2, each = 5),
group2 = rep(c('a','b'), times = 5),
x = rnorm(10))
# convert to data.frame to data.table
library(data.table)
smalldat <- data.table(smalldat)
# convert aggregated variable into raw data file
smalldat[, aggGroup1 := mean(x), by = group1]
smalldat
smalldat[, aggGroup1.2 := mean(x), by = list(group1, group2)]
smalldat
# below is plyr to achieve same requirement
library(plyr)
# create aggregated data
aggdat1 <- ddply(smalldat, .(group1), summarize,
aggGroup1plyr = mean(x))
aggdat12 <- ddply(smalldat, .(group1, group2), summarize,
aggGroup1.1plyr = mean(x))
# join back into data
smalldat <- join(smalldat, aggdat1, by = 'group1')
smalldat <- join(smalldat, aggdat12, by = c('group1', 'group2'))
# print data
smalldat
# Remove duplicated key
# Set keys - this sorts the data based on these values
setkeyv(smalldat, c('group1','group2'))
# keep unique observations (I also remove the variable x)
uniqdat <- subset(unique(smalldat), select = -x)
# print data
uniqdat
library(reshape)
smalldat.melt <- melt(smalldat, id.vars=c("group1","group2"))
smalldat.cast <- cast(groups1 + group2 ~ variable, data=smalldat.melt, fun=mean)
smalldat.cast
library(reshape)
smalldat.melt <- melt(smalldat, id.vars=c("group1","group2"))
smalldat.cast <- cast(group1 + group2 ~ variable, data=smalldat.melt, fun=mean)
smalldat.cast
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/package_datatable")
# generate a small dataset
set.seed(1234)
smalldat <- data.frame(group1 = rep(1:2, each = 5),
group2 = rep(c('a','b'), times = 5),
x = rnorm(10))
# convert to data.frame to data.table
library(data.table)
smalldat <- data.table(smalldat)
# convert aggregated variable into raw data file
smalldat[, aggGroup1 := mean(x), by = group1]
smalldat
smalldat[, aggGroup1.2 := mean(x), by = list(group1, group2)]
smalldat
# below is plyr to achieve same requirement
library(plyr)
# create aggregated data
aggdat1 <- ddply(smalldat, .(group1), summarize,
aggGroup1plyr = mean(x))
aggdat12 <- ddply(smalldat, .(group1, group2), summarize,
aggGroup1.1plyr = mean(x))
# join back into data
smalldat <- join(smalldat, aggdat1, by = 'group1')
smalldat <- join(smalldat, aggdat12, by = c('group1', 'group2'))
# print data
smalldat
# below is reshape to achieve same requirement
library(reshape)
smalldat.melt <- melt(smalldat, id.vars=c("group1","group2"))
smalldat.cast <- cast(group1 + group2 ~ variable, data=smalldat.melt, fun=mean)
smalldat.cast
# Remove duplicated key
# Set keys - this sorts the data based on these values
setkeyv(smalldat, c('group1','group2'))
# keep unique observations (I also remove the variable x)
uniqdat <- subset(unique(smalldat), select = -x)
# print data
uniqdat
#set project work directory
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/National-Emissions-Inventory")
#read data from provided data source
nei.url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
nei.file <- basename(nei.url)
if(!(file.edit(nei.file)))
download.file(nei.url,destfile=nei.file,method="auto")
nei.file.list <- basename(unzip(nei.file))
nei.file.list
#set project work directory
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/National-Emissions-Inventory")
#read data from provided data source
nei.url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
nei.file <- basename(nei.url)
if(!(file.exists(nei.file)))
download.file(nei.url,destfile=nei.file,method="auto")
nei.file.list <- basename(unzip(nei.file))
nei.file.list
download.file(nei.url,destfile=nei.file,method="auto")
#set project work directory
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/National-Emissions-Inventory")
#read data from provided data source
nei.url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
nei.file <- basename(nei.url)
if(!(file.exists(nei.file)))
download.file(nei.url,destfile=nei.file,method="auto")
nei.file.list <- basename(unzip(nei.file))
nei.file.list
#set project work directory
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/National-Emissions-Inventory")
#read data from provided data source
nei.url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
nei.file <- basename(nei.url)
if(!(file.exists(nei.file)))
download.file(nei.url,destfile=nei.file,method="auto")
nei.file.list <- basename(unzip(nei.file))
nei.file.list
NEI <- readRDS(nei.file.list[1])
SCC <- readRDS(nei.file.list[2])
dir()
head(NEI)
dim(NEI)
dim(SCC)
head(SCC)
NEI <- readRDS(nei.file.list[2])
SCC <- readRDS(nei.file.list[1])
head(SCC)
table(NEI[,2])
?sum
library(data.table)
NEI.plot1 <- data.table(NEI)
# Sum PM2.5 value by year
NEI.plot1 <- NEI.plot1[, sum_by_year := sum(Emissions), by=year]
head(NEI.plot1)
setkeyv (NEI.plot1,year)
setkeyv (NEI.plot1,as.factor(year))
setkeyv (NEI.plot1,as.character(year))
?as.character
NEI.plot1$year <- as.character(NEI.plot1$year)
setkeyv (NEI.plot1,year)
library(plyr)
# Sum PM2.5 value by year
NEI.plot1 <- ddply(NEI, .(year),summarize, totalbyyear=sum(Emissions))
NEI.plot1
attach(NEI.plot1)
plot(year, totalbyyear)
plot(year, totalbyyear, xlab="")
plot(year, totalbyyear, xlab="n")
plot(year, totalbyyear, xlim=="n")
plot(year, totalbyyear, xlim="n")
# set project work directory
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/National-Emissions-Inventory")
# read data from provided data source
nei.url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
nei.file <- basename(nei.url)
if(!(file.exists(nei.file)))
download.file(nei.url,destfile=nei.file,method="auto")
nei.file.list <- basename(unzip(nei.file))
#nei.file.list
dir()
# This first line will likely take a few seconds. Be patient!
NEI <- readRDS(nei.file.list[2])
SCC <- readRDS(nei.file.list[1])
# Merge variables together to get a new dataset for analysis if required
# For plot1, it is not required.
# Have total emissions from PM2.5 decreased in the United States from 1999 to 2008?
# Using the base plotting system, make a plot showing the total PM2.5 emission
# from all sources for each of the years 1999, 2002, 2005, and 2008.
library(plyr)
# Sum PM2.5 value by year
NEI.plot1 <- ddply(NEI, .(year),summarize, totalbyyear=sum(Emissions))
attach(NEI.plot1)
barplot(year, totalbyyear)
totalbyyear
barplot(totalbyyear,year)
?barplot
barplot(totalbyyear,year, legend.text="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008")
barplot(totalbyyear,year, title="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008", col=rainbow(nrow(NEI.plot1)))
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008", col=rainbow(nrow(NEI.plot1)),legend.text=c(1999,2002,2005,2008))
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008", col=rainbow(nrow(NEI.plot1)),legend.text=c(1999,2002,2005,2008),xlab="Year",ylab="PM2.5 emissions")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008", col=rainbow(nrow(NEI.plot1)),legend.text=c(1999,2002,2005,2008),xlab="Year",ylab="PM2.5 emissions", horiz=T)
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008", col=rainbow(nrow(NEI.plot1)),legend.text=c(1999,2002,2005,2008),xlab="Year",ylab="PM2.5 emissions")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008", col=rainbow(nrow(NEI.plot1)),legend.text=c(1999,2002,2005,2008),xlab="Year",ylab="PM2.5 emissions", xlim=c(1999,2002,2005,2008))
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008", col=rainbow(nrow(NEI.plot1)),legend.text=c(1999,2002,2005,2008),xlab="Year",ylab="PM2.5 emissions")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008", col=rainbow(nrow(NEI.plot1)),legend.text=c(1999,2002,2005,2008),xlab="Year",ylab="PM2.5 emissions", height=480,width=480)
NEI.plot1 <- ddply(NEI, .(year),summarize, totalbyyear=sum(Emissions))
attach(NEI.plot1)
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
legend.text=c(1999,2002,2005,2008),
xlab="Year",ylab="PM2.5 emissions")
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
NEI.plot1 <- ddply(NEI, .(year),summarize, totalbyyear=sum(Emissions))
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
legend.text=c(1999,2002,2005,2008),
xlab="Year",ylab="PM2.5 emissions")
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
xlab="Year",ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=c(1,1),col=rainbow(4))
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
xlab="Year",ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=c(2,1),col=rainbow(4))
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
xlab="Year",ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),col=rainbow(4))
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
xlab="Year",ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=3,col=rainbow(4))
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
xlab="Year",ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=4,col=rainbow(4))
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
xlab="Year",ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4))
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4))
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
?legend
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),border="n")
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),border=NULL)
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
axis(1, at=xticks, labels=sprintf("%1.2f",xticks))
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
xticks <- pretty(totalbyyear)
axis(1, at=xticks, labels=sprintf("%1.2f",xticks))
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
axis(1, at=xticks, labels=sprintf("%1.2f",xticks))
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
xticks <- pretty(totalbyyear)
axis(2, at=xticks, labels=sprintf("%1.2f",xticks))
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
xticks
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
yticks <- pretty(totalbyyear)
axis(2, at=yticks, labels=sprintf("%1.2f",yticks))
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
dev.copy(png,file="plot1.png", width=480,height=480)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
dev.copy(png,file="plot1.png", width=480,height=480)
detach(NEI.plot1)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
dev.copy(png,file="plot1.png")
detach(NEI.plot1)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("top",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
dev.copy(png,file="plot1.png")
detach(NEI.plot1)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent")
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
dev.copy(png,file="plot1.png")
detach(NEI.plot1)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent",bty="l",las=1,lwd=1,cex=0.7,oma = c(1, 1, 0, 1), mar = c(3, 4, 3.5, 5))
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
dev.copy(png,file="plot1.png")
detach(NEI.plot1)
dev.off()
attach(NEI.plot1)
par(ps=12, bg="transparent",bty="l",las=1,lwd=1,cex=0.7, mar = c(3, 4, 3.5, 5))
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
dev.copy(png,file="plot1.png")
detach(NEI.plot1)
dev.off()
par(ps=12, bg="transparent",bty="l",las=1,lwd=1,cex=0.7)
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=rainbow(nrow(NEI.plot1)),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=rainbow(4),bty="n")
dev.copy(png,file="plot1.png")
detach(NEI.plot1)
dev.off()
install.packages("RColorBrewer")
library(RColorBrewer)
cols <- brewer.pal(4,"Accent")
cols
attach(NEI.plot1)
library(RColorBrewer)
cols <- brewer.pal(4,"Accent")
par(ps=12, bg="transparent",bty="l",las=1,lwd=1,cex=0.7, mar = c(3, 4, 3.5, 5))
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=cols),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=cols,bty="n")
dev.copy(png,file="plot1.png")
detach(NEI.plot1)
dev.off()
attach(NEI.plot1)
library(RColorBrewer)
cols <- brewer.pal(4,"Accent")
pal <-colorRampPalette(cols)
par(ps=12, bg="transparent",bty="l",las=1,lwd=1,cex=0.7, mar = c(3, 4, 3.5, 5))
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=cols),
ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=cols,bty="n")
dev.copy(png,file="plot1.png")
detach(NEI.plot1)
dev.off()
attach(NEI.plot1)
library(RColorBrewer)
cols <- brewer.pal(4,"Accent")
pal <-colorRampPalette(cols)
par(ps=12, bg="transparent",bty="l",las=1,lwd=1,cex=0.7, mar = c(3, 4, 3.5, 5))
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=cols,ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=cols,bty="n")
dev.copy(png,file="plot1.png")
detach(NEI.plot1)
dev.off()
attach(NEI.plot1)
library(RColorBrewer)
cols <- brewer.pal(4,"Accent")
pal <-colorRampPalette(cols)
par(ps=12, bg="transparent",bty="l",las=1,lwd=1,cex=0.7, mar = c(3, 4, 3.5, 5))
barplot(totalbyyear,year, main="Total PM2.5 Emissions for 1999, 2002, 2005 and 2008",
col=pal(4),ylab="PM2.5 emissions")
legend("topright",legend=c(1999,2002,2005,2008),lty=1,col=pal(4),bty="n")
dev.copy(png,file="plot1.png")
detach(NEI.plot1)
dev.off()
