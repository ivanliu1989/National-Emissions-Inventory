basename(unzip(harus.file))
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/Human-Activity-Recognition-Using-Smartphones/")
# 1.Merges the training and the test sets to create one data set.
harus.url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
harus.file <- basename(harus.url)
if(!(file.exists(harus.file))){
download.file(harus.url,destfile=harus.file,method="auto")
}
harus.file.name <- unzip(harus.file)
harus.file.name
harus.file.name[3]
test.list <- 5:13
test.list
x.test <- read.table(file=harus.file.list[15])
harus.file.list <- unzip(harus.file)
x.test <- read.table(file=harus.file.list[15])
head(x.test)
y.test <- read.table(file=harus.file.list[16])
y.test
head(y.test)
x.train <- read.table(file=harus.file.list[27])
y.train <- read.table(file=harus.file.list[28])
head(x.train)
head(y.train)
harus.file.list
subject.test <- read.table(file=harus.file.list[14])
subject.train <- read.table(file=harus.file.list[26])
subject.test
head(subject.test)
head(subject.train)
head(y.train)
head(y.test)
table(y.test)
table(y.train)
table(c(subject.train,subject.test))
table(subject.train)
table(subject.test)
sum(table(subject.test))
sum(table(y.test))
sum(table(x.test))
sum(table(x.test[,1]))
sum(table(x.train[,1]))
test.merged <- cbind(x.test,y.test,subject.test)
sum(table(test.merged[,1]))
names(test.merged)
train.merged <- cbind(x.train,y.train,subject.train)
names(train.merged)
harus.data <- rbind(train.merged,test.merged)
names(harus.data)
sum(table(harus.data[,1]))
harus.file.list
features <- read.table(file=harus.file.list[2])
features
feature.names <- features[,2]
feature.names
colnames(harus.data)<-c(feature.names,"y","subject")
names(harus.data)
feature.names
class(feature.names)
colnames(harus.data)<-c(as.vector(feature.names),"y","subject")
feature.names
names(harus.data)
harus.col <- names(harus.data)
harus.col
measure.mean <- "mean()"
measure.std <- "std()"
grep(measure.mean,harus.col)
harus.data.mean <- harus.data[,grep(measure.mean,harus.col)]
names(harus.data.mean)
harus.data.std <- harus.data[,grep(measure.std,harus.col)]
names(harus.data.std)
harus.data.sub <- cbind(harus.data.mean,harus.data.std)
names(harus.data.sub)
harus.data.all <- harus.data[,grep(measure.mean | measure.std,harus.col)]
harus.data.all <- harus.data[,grep(c(measure.mean,measure.std),harus.col)]
?grepl
grepl(measure.mean,harus.col)
a <- grep(measure.mean,harus.col)
b <- grepl(measure.std,harus.col)
a <- grepl(measure.mean,harus.col)
c <- a | b
c
table(c)
table(b)
table(a)
harus.subset <- harus.data[,c]
names(harus.subset)
harus.col <- names(harus.data)
measure.mean <- "mean()"
measure.std <- "std()"
a <- grepl(measure.mean,harus.col,)
b <- grepl(measure.std,harus.col)
c <- a | b
names(harus.subset)
a <- grepl(measure.mean,harus.col,fixed =T)
a
a <- grepl(measure.mean,harus.col,fixed=T)
b <- grepl(measure.std,harus.col,fixed=T)
c <- a | b
harus.subset <- harus.data[,c]
names(harus.subset)
des.names <- sub("()","", names(harus.subset))
des.names
gsub("()","", names(harus.subset))
gsub("(","", names(harus.subset))
gsub("\\(","", names(harus.subset))
gsub("\\()","", names(harus.subset))
names(harus.subset) <- gsub("\\()","", names(harus.subset))
names(harus.subset)
head(harus.subset)
names(harus.data)
harus.subset$y <- harus.data[,562]
head(harus.subset)
table(harus.subset$y)
harus.file.list
act.name <- read.table(harus.file.list[1])
act.name
colnames(act.name)<-c("y","Activity")
act.name
install.packages("plyr")
library(plyr)
harus.all <- arrange(join(harus.subset, act.name),y)
harus.all
table(harus.all$Activity)
table(harus.all$y)
table(harus.all$y, harus.all$Activity)
table(harus.all[,1], harus.all$Activity)
names(harus.all)
harus.subset$y <- harus.data[,562]
harus.subset$Subject <- harus.data[,563]
names(harus.subset) <- gsub("\\()","", names(harus.subset))
act.name <- read.table(harus.file.list[1])
colnames(act.name)<-c("y","Activity")
library(plyr)
harus.all <- arrange(join(harus.subset, act.name),y)
table(harus.all$y, harus.all$Activity)
names(harus.all)
harus.tidy <- harus.all[,-67]
names(harus.tidy)
table(harus.tidy$Subject)
table(harus.tidy$Subject, harus.tidy$Activity)
harus.file.list
f <- read.table(harus.file.list[2])
f
names(harus.all)
harus.tidy <- harus.all[,-67]
names(harus.tidy)
names(harus.tidy)<-tolower(names(harus.tidy))
harus.tidy <- harus.all[,-67]
names(harus.tidy)
names(harus.tidy)<-tolower(names(harus.tidy))
names(harus.tidy)
names(harus.tidy)<-gsub("-","",tolower(names(harus.tidy)))
names(harus.tidy)
class(harus.tidy[,c(67,68)])
class(harus.tidy[,67])
class(harus.tidy[,68])
as.factor(harus.tidy[,c(67,68)])
as.factor(harus.tidy[,67])
class(harus.tidy[,68])
class(harus.tidy[,67])
as.factor(harus.tidy[,67])
class(harus.tidy[,67])
harus.tidy[,67]<-as.factor(harus.tidy[,67])
class(harus.tidy[,67])
harus.tidy$subject <- as.factor(harus.tidy$subject)
harus.tidy$activity <- as.factor(harus.tidy$activity)
class(harus.tidy$subject)
apply(harus.tidy,2,class)
apply(harus.tidy,1,class)
apply(harus.tidy,2,class)
apply(harus.tidy[,c(67,68)],2,as.factor)
apply(harus.tidy,2,class)
class(harus.tidy$subject)
class(harus.tidy$activity)
?ddplly
?ddply
harus.tidy.2 <- ddply(harus.tidy, activity, mean)
harus.tidy.2 <- ddply(harus.tidy, harus.tidy$activity, mean)
harus.tidy.2 <- ddply(harus.tidy, .(activity,subject),summarize, mean)
harus.tidy.2 <- ddply(harus.tidy, .(activity), summarize, mean)
harus.tidy.2 <- ddply(harus.tidy, .(activity), mean)
harus.tidy.2 <- ddply(harus.tidy, .(activity, subject), mean)
harus.tidy.2
?lapply
names(harus.tidy)
lapply(harus.tidy[,1:66],as.numeric)
harus.tidy.2 <- ddply(harus.tidy, .(activity, subject), mean)
harus.tidy.2
harus.tidy.2 <- ddply(harus.tidy, .(activity), mean)
class(harus.tidy[,1])
class(harus.tidy[,2])
class(harus.tidy[,3])
head(harus.tidy)
harus.tidy <- harus.all[,-67]
names(harus.tidy) <- gsub("-","",tolower(names(harus.tidy)))
harus.tidy$subject <- as.factor(harus.tidy$subject)
harus.tidy$activity <- as.factor(harus.tidy$activity)
head(harus.tidy)
class(harus.tidy[,3])
class(harus.tidy[,2])
harus.tidy.2 <- ddply(harus.tidy[,1:66], .(activity, subject), mean)
harus.tidy.2 <- ddply(harus.tidy[,1:68], .(activity, subject), mean)
harus.tidy.2
install.packages("reshape")
#library(reshape)
library(reshape)
harus.tidy.2 <- ddply(harus.tidy[,1:68], .("activity", "subject"), mean)
harus.tidy.2 <- ddply(harus.tidy[,1:68], .("subject"), mean)
harus.molten <- melt(harus.tidy, id.vars=c("activity","subject"))
harus.molten
head(harus.molten)
harus.cast <- cast(subject + variable ~ activity, data = harus.molten, fun = mean)
head(harus.cast)
harus.cast
harus.cast <- cast(activity + variable ~ subject, data = harus.molten, fun = mean)
harus.cast
round(harus.cast,digits=2)
str(harus.cast)
names(harus.cast)
harus.cast <- cast(subject + variable ~ activity, data = harus.molten, fun = mean)
names(harus.cast)
round(harus.cast[,3:8],digits=2)
head(harus.cast)
head(harus.cast)
options(digits=2)
head(harus.cast)
harus.tidy
harus.tidy <- harus.tidy[,-b]
names(harus.tidy)
b
d <- grepl("std",names(harus.tidy),fixed=T)
harus.tidy <- harus.tidy[,-d]
names(harus.tidy)
d
harus.tidy[,-d]
names(harus.tidy[,-d])
d
class(d)
harus.tidy <- harus.all[,-67]
names(harus.tidy) <- gsub("-","",tolower(names(harus.tidy)))
harus.tidy$subject <- as.factor(harus.tidy$subject)
harus.tidy$activity <- as.factor(harus.tidy$activity)
##apply(harus.tidy,2,class)
# 5.Creates a second, independent tidy data set with the average of each variable for each activity and each subject.
lapply(harus.tidy[,1:66],as.numeric)
d <- grepl("std",names(harus.tidy),fixed=T)
harus.tidy <- harus.tidy[,-d]
names(harus.tidy)
-d
harus.tidy <- harus.all[,-67]
names(harus.tidy) <- gsub("-","",tolower(names(harus.tidy)))
harus.tidy$subject <- as.factor(harus.tidy$subject)
harus.tidy$activity <- as.factor(harus.tidy$activity)
##apply(harus.tidy,2,class)
# 5.Creates a second, independent tidy data set with the average of each variable for each activity and each subject.
#lapply(harus.tidy[,1:66],as.numeric)
d <- grepl("std",names(harus.tidy),fixed=T)
harus.tidy <- harus.tidy[,!d]
names(harus.tidy)
library(reshape)
harus.molten <- melt(harus.tidy, id.vars=c("activity","subject"))
harus.cast <- cast(subject + variable ~ activity, data = harus.molten, fun = mean)
##head(harus.cast)
harcus.cast
harus.cast
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/Human-Activity-Recognition-Using-Smartphones/")
source("run_analysis.R")
run_analysis()
head(harus.cast)
harus.all
source("run_analysis.R")
run_analysis()
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/Human-Activity-Recognition-Using-Smartphones/")
a <- read.csv("tidy_dataset.csv")
head(a)
names(a)
b <- read.csv("tidy_dataset_avg.csv")
names(b)
b
install.packages("knitr")
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/Human-Activity-Recognition-Using-Smartphones")
library(knitr)
knit2html("CodeBook.rmd")
source("run_analysis.R")
run_analysis()
a <- read.table("tidy_dataset.txt")
head(a)
b <- read.table("tidy_dataset.csv")
head(b)
a <- read.table("tidy_dataset.txt", head=T)
head(a)
b <- read.csv("tidy_dataset.csv")
head(b)
a <- read.table("tidy_dataset.txt", head=T,sep=",")
head(a)
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
a <- read.table("tidy_dataset.txt", head=T)
head(a)
set.seed(1234)
smalldat <- data.frame(group1 = rep(1:2, each = 5),
group2 = rep(c('a','b'), times = 5),
x = rnorm(10))
smalldat
library(data.table)
smalldat <- data.table(smalldat)
install.package("data.table")
install.packages("data.table")
library(data.table)
smalldat <- data.table(smalldat)
smalldat
class(smalldat)
smalldat[, aggGroup1 := mean(x), by = group1]
smalldat
smalldat[, aggGroup1.2 := mean(x), by = list(group1, group2)]
smalldat
library(plyr)
aggdat1 <- ddply(smalldat, .(group1), summarize,
aggGroup1plyr = mean(x))
aggdat1
aggdat1 <- ddply(smalldat, .(group2), summarize,
aggGroup1plyr = mean(x))
aggdat1 <- ddply(smalldat, .(group1), summarize,
aggGroup1plyr = mean(x))
aggdat2 <- ddply(smalldat, .(group2), summarize,
aggGroup1plyr = mean(x))
aggdat2
smalldat <- join(smalldat, aggdat1, by = 'group1')
smalldat <- join(smalldat, aggdat2, by = c('group1', 'group2'))
smalldat
smalldat <- join(smalldat, aggdat12, by = c('group1', 'group2'))
smalldat <- join(smalldat, aggdat2, by = c('group1', 'group2'))
setkeyv(smalldat, c('group1','group2'))
smalldat
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/package_datatable")
# generate a small dataset
set.seed(1234)
smalldat <- data.frame(group1 = rep(1:2, each = 5),
group2 = rep(c('a','b'), times = 5),
x = rnorm(10))
# convert to data.frame to data.table
library(data.table)
smalldat <- data.table(smalldat)
# convert aggregated variable into raw data file
smalldat[, aggGroup1 := mean(x), by = group1]
Output
smalldat[, aggGroup1.2 := mean(x), by = list(group1, group2)]
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/package_datatable")
# generate a small dataset
set.seed(1234)
smalldat <- data.frame(group1 = rep(1:2, each = 5),
group2 = rep(c('a','b'), times = 5),
x = rnorm(10))
# convert to data.frame to data.table
library(data.table)
smalldat <- data.table(smalldat)
# convert aggregated variable into raw data file
smalldat[, aggGroup1 := mean(x), by = group1]
smalldat[, aggGroup1.2 := mean(x), by = list(group1, group2)]
smalldat
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/package_datatable")
# generate a small dataset
set.seed(1234)
smalldat <- data.frame(group1 = rep(1:2, each = 5),
group2 = rep(c('a','b'), times = 5),
x = rnorm(10))
# convert to data.frame to data.table
library(data.table)
smalldat <- data.table(smalldat)
# convert aggregated variable into raw data file
smalldat[, aggGroup1 := mean(x), by = group1]
smalldat
smalldat[, aggGroup1.2 := mean(x), by = list(group1, group2)]
smalldat
# below is plyr to achieve same requirement
library(plyr)
# create aggregated data
aggdat1 <- ddply(smalldat, .(group1), summarize,
aggGroup1plyr = mean(x))
aggdat12 <- ddply(smalldat, .(group1, group2), summarize,
aggGroup1.1plyr = mean(x))
# join back into data
smalldat <- join(smalldat, aggdat1, by = 'group1')
smalldat <- join(smalldat, aggdat12, by = c('group1', 'group2'))
# print data
smalldat
# Remove duplicated key
# Set keys - this sorts the data based on these values
setkeyv(smalldat, c('group1','group2'))
# keep unique observations (I also remove the variable x)
uniqdat <- subset(unique(smalldat), select = -x)
# print data
uniqdat
library(reshape)
smalldat.melt <- melt(smalldat, id.vars=c("group1","group2"))
smalldat.cast <- cast(groups1 + group2 ~ variable, data=smalldat.melt, fun=mean)
smalldat.cast
library(reshape)
smalldat.melt <- melt(smalldat, id.vars=c("group1","group2"))
smalldat.cast <- cast(group1 + group2 ~ variable, data=smalldat.melt, fun=mean)
smalldat.cast
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/package_datatable")
# generate a small dataset
set.seed(1234)
smalldat <- data.frame(group1 = rep(1:2, each = 5),
group2 = rep(c('a','b'), times = 5),
x = rnorm(10))
# convert to data.frame to data.table
library(data.table)
smalldat <- data.table(smalldat)
# convert aggregated variable into raw data file
smalldat[, aggGroup1 := mean(x), by = group1]
smalldat
smalldat[, aggGroup1.2 := mean(x), by = list(group1, group2)]
smalldat
# below is plyr to achieve same requirement
library(plyr)
# create aggregated data
aggdat1 <- ddply(smalldat, .(group1), summarize,
aggGroup1plyr = mean(x))
aggdat12 <- ddply(smalldat, .(group1, group2), summarize,
aggGroup1.1plyr = mean(x))
# join back into data
smalldat <- join(smalldat, aggdat1, by = 'group1')
smalldat <- join(smalldat, aggdat12, by = c('group1', 'group2'))
# print data
smalldat
# below is reshape to achieve same requirement
library(reshape)
smalldat.melt <- melt(smalldat, id.vars=c("group1","group2"))
smalldat.cast <- cast(group1 + group2 ~ variable, data=smalldat.melt, fun=mean)
smalldat.cast
# Remove duplicated key
# Set keys - this sorts the data based on these values
setkeyv(smalldat, c('group1','group2'))
# keep unique observations (I also remove the variable x)
uniqdat <- subset(unique(smalldat), select = -x)
# print data
uniqdat
#set project work directory
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/National-Emissions-Inventory")
#read data from provided data source
nei.url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
nei.file <- basename(nei.url)
if(!(file.edit(nei.file)))
download.file(nei.url,destfile=nei.file,method="auto")
nei.file.list <- basename(unzip(nei.file))
nei.file.list
#set project work directory
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/National-Emissions-Inventory")
#read data from provided data source
nei.url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
nei.file <- basename(nei.url)
if(!(file.exists(nei.file)))
download.file(nei.url,destfile=nei.file,method="auto")
nei.file.list <- basename(unzip(nei.file))
nei.file.list
download.file(nei.url,destfile=nei.file,method="auto")
#set project work directory
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/National-Emissions-Inventory")
#read data from provided data source
nei.url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
nei.file <- basename(nei.url)
if(!(file.exists(nei.file)))
download.file(nei.url,destfile=nei.file,method="auto")
nei.file.list <- basename(unzip(nei.file))
nei.file.list
#set project work directory
setwd("C:/Documents and Settings/Macro/Desktop/Ivandata/National-Emissions-Inventory")
#read data from provided data source
nei.url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
nei.file <- basename(nei.url)
if(!(file.exists(nei.file)))
download.file(nei.url,destfile=nei.file,method="auto")
nei.file.list <- basename(unzip(nei.file))
nei.file.list
NEI <- readRDS(nei.file.list[1])
SCC <- readRDS(nei.file.list[2])
dir()
head(NEI)
dim(NEI)
dim(SCC)
head(SCC)
NEI <- readRDS(nei.file.list[2])
SCC <- readRDS(nei.file.list[1])
head(SCC)
table(NEI[,2])
?sum
library(data.table)
NEI.plot1 <- data.table(NEI)
# Sum PM2.5 value by year
NEI.plot1 <- NEI.plot1[, sum_by_year := sum(Emissions), by=year]
head(NEI.plot1)
setkeyv (NEI.plot1,year)
setkeyv (NEI.plot1,as.factor(year))
setkeyv (NEI.plot1,as.character(year))
?as.character
NEI.plot1$year <- as.character(NEI.plot1$year)
setkeyv (NEI.plot1,year)
library(plyr)
# Sum PM2.5 value by year
NEI.plot1 <- ddply(NEI, .(year),summarize, totalbyyear=sum(Emissions))
NEI.plot1
attach(NEI.plot1)
plot(year, totalbyyear)
plot(year, totalbyyear, xlab="")
plot(year, totalbyyear, xlab="n")
plot(year, totalbyyear, xlim=="n")
plot(year, totalbyyear, xlim="n")
